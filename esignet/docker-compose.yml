services:
  database:
    image: 'postgres:bookworm'
    ports:
      - 5455:5432
    container_name: database
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data
    networks:
      - cdpi_demo_network

  redis:
    image: redis:6.0
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redisdata:/data
    networks:
      - cdpi_demo_network

  mock-identity-system:
    image: 'mosipid/mock-identity-system:0.10.1'
    user: root
    hostname: mock-identity-system
    container_name: mock-identity-system
    environment:
      - container_user=mosip
      - active_profile_env=default,local
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/mosip_mockidentitysystem?currentSchema=mockidentitysystem
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - MOSIP_MOCK_IDA_KYC_TRANSACTION_TIMEOUT_SECS=900
    depends_on:
      - database
    networks:
      - cdpi_demo_network

  esignet:
    image: 'mosipid/esignet-with-plugins:1.5.1'
    user: root
    hostname: esignet
    container_name: esignet
    environment:
      - container_user=mosip
      - active_profile_env=default,local
      - plugin_name_env=esignet-mock-plugin.jar
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/mosip_esignet?currentSchema=esignet
      - MOSIP_ESIGNET_MOCK_DOMAIN_URL=http://mock-identity-system:8082
      - MOSIP_ESIGNET_INTEGRATION_KEY_BINDER=MockKeyBindingWrapperService
      - MOSIP_ESIGNET_DOMAIN_URL=https://esignetdemo.duckdns.org/esignet
      - SPRING_CACHE_TYPE=redis
      - SPRING_REDIS_HOST=redis-server
      - SPRING_REDIS_PASSWORD=
      - CORS_ALLOWED_ORIGINS=https://esignetdemo.duckdns.org
      - SPRING_CORS_ALLOW_ORIGIN=https://esignetdemo.duckdns.org
      - CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - CORS_ALLOWED_HEADERS=authorization,content-type
      - CORS_ALLOW_CREDENTIALS=true
      - CORS_MAX_AGE=3600
    depends_on:
      - database
      - mock-identity-system
      - redis
    networks:
      - cdpi_demo_network

  esignet-ui:
    image: 'mosipid/oidc-ui:1.5.1'
    user: root
    container_name: esignet-ui
    ports:
       - "3000:3000"
    hostname: esignet-ui
    environment:
      - container_user=mosip
      - DEFAULT_WELLKNOWN=%5B%7B%22name%22%3A%22OpenID%20Configuration%22%2C%22value%22%3A%22%2F.well-known%2Fopenid-configuration%22%7D%2C%7B%22name%22%3A%22Jwks%20Json%22%2C%22value%22%3A%22%2F.well-known%2Fjwks.json%22%7D%2C%7B%22name%22%3A%22Authorization%20Server%22%2C%22value%22%3A%22%2F.well-known%2Foauth-authorization-server%22%7D%5D
      - SIGN_IN_WITH_ESIGNET_PLUGIN_URL=https://raw.githubusercontent.com/mosip/artifactory-ref-impl/master/artifacts/src/mosip-plugins/sign-in-with-esignet/sign-in-with-esignet.zip
      # NOTA: Si esta UI será accedida por una subruta (ej. /esignet-ui/),
      # y tu cliente React es el dominio raíz, es posible que necesites
      # configurar el 'base-path' o 'context-path' aquí si la aplicación lo soporta.
      # Por ejemplo: 
      - PUBLIC_URL=/esignet-ui/ # <--- ¡Asegúrate de que esta línea esté!

    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf # Si este nginx.conf es para el Nginx interno de la UI, mantenlo
    depends_on:
      - esignet
    networks:
      - cdpi_demo_network

volumes:
  pgdata:
  redisdata:

networks:
  cdpi_demo_network:
    external: true